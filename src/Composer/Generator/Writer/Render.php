<?php
/**
 *
 * @date 04.09.2025
 * @author Oleksii Bogatchenko
 * @package composer-preloader-plugin
 * @version 1.0
 */

namespace Oleksii\ComposerPreloader\Composer\Generator\Writer;

class Render
{
    public static function renderPreloaderHeader(): string
    {
        return <<<PHP
<?php
    /** Generated by composer-preloader-plugin */
    \$rootDir = \dirname(__DIR__);


PHP;
    }

    protected static function renderLibsCheck(): string
    {
        return <<<PHP
if (!\\function_exists('opcache_compile_file') || !\\ini_get('opcache.enable')) {
  echo 'Opcache is not available.';
  die(1);
}

if ('cli' === \\PHP_SAPI && !\\ini_get('opcache.enable_cli')) {
  echo 'Opcache is not enabled for CLI applications.';
  die(2);
}

PHP;

    }

    public static function renderPreloaderFooter(): string
    {
        return <<<PHP


PHP;

    }

    public static function renderPreloadIncludeItem(string $filePath): string
    {
        return <<<PHP
include \$rootDir . \\DIRECTORY_SEPARATOR  .  '$filePath';

PHP;
    }

    public static function renderPreloadCompileFile(string $filePath): string
    {
        return <<<PHP
\\opcache_compile_file(\$rootDir . \\DIRECTORY_SEPARATOR  .  '$filePath');

PHP;
    }

    public static function renderPreloadListHeader(string $filePath): string
    {
        return <<<PHP
<?php
/** Generated by composer-preloader-plugin */

PHP;

    }

    public static function renderPreloadListBody(array $fileList): string
    {
        $code = <<< PHP
return [

PHP;

        foreach ($fileList as $file) {
            $code .= <<< PHP
'$file',

PHP;
        }

        $code .= <<< PHP
];

PHP;

        return $code;
    }
}