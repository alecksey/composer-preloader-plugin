<?php
use Oleksii\ComposerPreloader\Composer\Generator\Writer\Render;
use PHPUnit\Framework\TestCase;

final class RenderTest extends TestCase
{
    public function testRenderPreloaderHeaderContainsSignature(): void
    {
        $s = Render::renderPreloaderHeader();
        $this->assertStringContainsString('Generated by composer-preloader-plugin', $s);
        $this->assertStringContainsString('$rootDir', $s);
    }

    public function testRenderPreloadIncludeItem(): void
    {
        $s = Render::renderPreloadIncludeItem('foo.php');
        $this->assertStringContainsString('include $rootDir', str_replace('\\', '\\', $s));
        $this->assertStringContainsString("'foo.php'", $s);
    }

    public function testRenderPreloadCompileFile(): void
    {
        $s = Render::renderPreloadCompileFile('bar.php');
        $this->assertStringContainsString('opcache_compile_file', $s);
        $this->assertStringContainsString("'bar.php'", $s);
    }

    public function testRenderPreloadListHeaderAndBody(): void
    {
        $h = Render::renderPreloadListHeader('ignored');
        $this->assertStringContainsString('<?php', $h);

        $b = Render::renderPreloadListBody(['a.php', 'b.php']);
        $this->assertStringContainsString("'a.php'", $b);
        $this->assertStringContainsString("'b.php'", $b);
        $this->assertStringContainsString('return [', $b);
    }
}
